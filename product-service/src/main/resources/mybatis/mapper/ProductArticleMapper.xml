<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanium.product.dao.IProductArticleDao">
    <resultMap id="productArticleResultMap"
               type="com.hanium.product.dto.ProductArticleDto$Info">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="writeDate" column="write_date"/>
        <result property="updateDate" column="update_date"/>
        <result property="address1" column="address1"/>
        <result property="address2" column="address2"/>
        <result property="price" column="price"/>
        <result property="status" column="status"/>
        <result property="interestCount" column="interest_count"/>
        <association property="category" javaType="com.hanium.product.dto.CategoryDto">
            <id property="id" column="category_id"/>
            <result property="name" column="name"/>
        </association>
        <association property="user" javaType="com.hanium.product.dto.UserDto$Info">
            <id property="id" column="user_id"/>
        </association>
        <collection property="productImages" ofType="com.hanium.product.dto.ProductImageDto">
            <id property="articleId" column="id"/>
            <id property="listNum" column="list_num"/>
            <result property="fileUrl" column="file_url"/>
        </collection>
    </resultMap>

    <select id="findListBy"
            resultMap="productArticleResultMap">
        SELECT
        pa.id,
        pa.title,
        pa.content,
        pa.write_date,
        pa.update_date,
        pa.address1,
        pa.address2,
        pa.price,
        pa.user_id,
        pa.status,
        pa.interest_count,
        c.id AS category_id,
        c.name,
        pi.list_num,
        pi.file_url
        FROM (
        SELECT *
        FROM product_article
        <where>
            <if test="offset != null">
                id &lt; #{offset}
            </if>
            <if test="keyword != null">
                AND (title like '%${keyword}%' || content like '%${keyword}%')
            </if>
            <if test="address1 != null">
                AND address1 = #{address1}
            </if>
            <if test="address2 != null">
                AND address2 = #{address2}
            </if>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <if test="articleIds != null and articleIds.size() > 0">
                AND id IN (
                <foreach item="item" separator="," collection="articleIds">
                    #{item}
                </foreach>
                )
            </if>
        </where>
        ORDER BY
        <if test='order != null and order.equals("-interest_count")'>
            interest_count DESC,
        </if>
        <choose>
            <when test="userId != null or articleIds != null">
                id
            </when>
            <otherwise>
                id DESC
            </otherwise>
        </choose>
        <choose>
            <when test="userId != null or articleIds != null">
                <if test="limit!=null">
                    LIMIT #{limit}
                </if>
            </when>
            <when test="limit!=null">
                LIMIT #{limit}
            </when>
            <otherwise>
                LIMIT 20
            </otherwise>
        </choose>
        ) pa
        INNER JOIN category c ON pa.category_id = c.id
        INNER JOIN product_image pi ON pi.article_id = pa.id
    </select>

    <select id="findOneBy"
            resultMap="productArticleResultMap">
        SELECT pa.id,
               pa.title,
               pa.content,
               pa.write_date,
               pa.update_date,
               pa.address1,
               pa.address2,
               pa.price,
               pa.user_id,
               pa.interest_count,
               pa.status,
               c.id AS category_id,
               c.name,
               pi.list_num,
               pi.file_url
        FROM product_article pa
                 INNER JOIN category c ON pa.category_id = c.id AND pa.id = #{id}
                 INNER JOIN product_image pi ON pi.article_id = pa.id
    </select>

</mapper>